<?php 
	/**
	 * This is the root file that controls the templating engine.  This file is called everytime a page is loaded.  It interfaces with the Struts Templating Engine
	 * and gets all settings from the settings.settings.yml file.  Please do not edit this file.  it may cause the site to go down.
	 *
	 * @author 		Technoguru Aka. Johnathan Pulos
	 * @version 	2
	 * @copyright 	11 June, 2010
	 * @package 	STRUTS
	 **/
	/**
	 * Start all the sessions
	 *
	 * @author Johnathan Pulos
	 */
    session_start(); 
    /**
     * Define global vars for the engine
     */
    define("DOMAIN", "http://struts.local/");
    define("DS", '/');
    define("APP_PATH", dirname(__FILE__) .DS);

    /**
     * Include the Struts Templating Engine, and the spyc class that reads the yaml settings
     *
     * @author Technoguru Aka. Johnathan Pulos
     */
	include("engine/struts_engine.class.php");
    /**
     * Setup the strutsEngine object
     *
     * @author Technoguru Aka. Johnathan Pulos
     */
	$newStrut = strutsEngine::init();
	/**
	 * SETTINGS
	 *
	 * @author Technoguru Aka. Johnathan Pulos
	 */
	$newStrut->setSetting('default_layout', 'example.html');
	$newStrut->setSetting('settings_file', 'settings/site.yml');
	$newStrut->setSetting('database_file', 'settings/database.inc.php');
	$newStrut->setSetting('cache_time', 600); //Seconds
	$newStrut->setSetting('cache_ext', 'cache');
	$newStrut->setSetting('retain_logs', 600); //Seconds
	/**
	 * Set the level of debugging.
	 *
	 * 4 - Display full stack trace when an error occurs, but do not write the trace to the log files (development), Caching disabled, Compression disabled 
	 * 3 - Display full stack trace when an error occurs, and write the trace to the log files (development), Caching disabled, Compression disabled
 	 * 2 - Write stack trace into log file (development), Caching Disabled, Compression disabled
	 * 1 - Write stack trace into log file, Caching Enabled, Compression enabled
	 * 0 - do nothing, Caching Enabled, Compression enabled
	 *
	 * @author Technoguru Aka. Johnathan Pulos
	 */
	$newStrut->setSetting('debug_level', 3);
	$newStrut->setSetting('js_tag_format', "<script src=\"%s\"></script>\r\n");
	$newStrut->setSetting('css_tag_format', "<link rel=\"stylesheet\" href=\"%s\">\r\n");
	$newStrut->setSetting('sitewide_compressed_filename', "sitewide.min");
	$strutDirectories = array();
    $strutDirectories['cache'] = 'tmp/';
    $strutDirectories['pages'] = 'design/pages';
    $strutDirectories['pages_code'] = 'code/pages';
    $strutDirectories['modules'] = 'design/modules';
    $strutDirectories['modules_code'] = 'code/modules';
    $strutDirectories['layouts'] = 'design/layouts';
    $strutDirectories['css'] = 'design/css';
    $strutDirectories['js'] = 'design/js';
    $strutDirectories['elements'] = 'design/elements';
	$newStrut->setSetting('directories', $strutDirectories);
	$page_url = (isset($_GET['url'])) ? trim($_GET['url']) : 'index.html';
	$newStrut->processRequest($page_url);
	$currentPage = $newStrut->getSetting('current_page');
    /**
     * Include the database file if it exists
     *
     * @author Technoguru Aka. Johnathan Pulos
     */
    $databaseFile = APP_PATH . str_replace("/", DS, $newStrut->getSetting('database_file'));
    if(file_exists($databaseFile)){
	    require_once($databaseFile);
	 }
	/**
     * If the page requested has a PHP functionality file, then include and run it.
     *
     * @author Johnathan Pulos
     */
	if(!empty($currentPage)) {
	    $phpFile = APP_PATH . $currentPage['php_file'];
    	if(file_exists($phpFile)){
    	    include(str_replace('/', DS, $phpFile));
    	}
	}
	 /**
	  * Declare any modules/page vars to the Struts Templating Engine you need access to on the layout design page 
	  *
	  * @author Johnathan Pulos
	  */
    $moduleDirectory = APP_PATH . $newStrut->getDirectory('modules_code', true);
    if(file_exists($moduleDirectory . DS . 'modules.inc.php')){
        $module_directory = APP_PATH . $newStrut->getDirectory('modules', true);
	    require_once($moduleDirectory . DS . 'modules.inc.php');
	 }
	$newStrut->renderRequest();
?>